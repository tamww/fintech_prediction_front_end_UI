[{"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\layout\\postlogin.jsx":"1","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\sidebar\\sidebar.jsx":"2","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\loginp\\loginp.js":"3","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\index.js":"4","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Comparison\\Comparison.jsx":"5","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Datacenter\\Datacenter.jsx":"6","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Companyinfo\\Companyinfo.jsx":"7","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Dashboard\\Dashboard.jsx":"8","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\infocard\\chartbox\\chartnews.jsx":"9","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\data\\transactiondata.jsx":"10","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\router\\routes.js":"11","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\App.js":"12","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\infocard\\newsboard\\newsbody.jsx":"13","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\topbar\\topbar.jsx":"14","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Mapview\\Mapview.jsx":"15","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\infocard\\newsboard\\newsbox.jsx":"16","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\Auth\\userToken.js":"17","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Datacenter\\KeyItem\\country_code.jsx":"18","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\router\\routing.jsx":"19","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Trend\\Trend.jsx":"20","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Datacenter\\KeyItem\\unique_cat_name.jsx":"21","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Datacenter\\KeyItem\\col.jsx":"22","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\MapV2\\mapChartwithAnnotate.jsx":"23","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\MapV2\\mapChartNoAnnotate.jsx":"24","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\barIV.jsx":"25","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\barII.jsx":"26","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\radar.jsx":"27","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\bar.jsx":"28","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\lineI.jsx":"29","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\barIII.jsx":"30","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Trend\\TrendingPager\\ExtraBumb.jsx":"31","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Trend\\TrendingPager\\seedToa.jsx":"32","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Trend\\TrendingPager\\heatMap.jsx":"33","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Trend\\TrendingPager\\aTob.jsx":"34","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\verticalBarI.jsx":"35","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\Context\\UserContext.js":"36","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\history\\history.js":"37","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\BalanceGraph.jsx":"38","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\ProfitGraph.jsx":"39","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\PieChartI.jsx":"40","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\data\\newstemp.jsx":"41","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\MapV2\\extraMAP.jsx":"42","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\MapV2\\processed_.jsx":"43"},{"size":1990,"mtime":1611938408226,"results":"44","hashOfConfig":"45"},{"size":2076,"mtime":1611934097116,"results":"46","hashOfConfig":"45"},{"size":4663,"mtime":1611938445035,"results":"47","hashOfConfig":"45"},{"size":191,"mtime":1611938601510,"results":"48","hashOfConfig":"45"},{"size":42950,"mtime":1611935000952,"results":"49","hashOfConfig":"45"},{"size":25684,"mtime":1611938344990,"results":"50","hashOfConfig":"45"},{"size":31924,"mtime":1611938740524,"results":"51","hashOfConfig":"45"},{"size":3724,"mtime":1611937683749,"results":"52","hashOfConfig":"45"},{"size":2289,"mtime":1611932930902,"results":"53","hashOfConfig":"45"},{"size":1486,"mtime":1611932868909,"results":"54","hashOfConfig":"45"},{"size":1602,"mtime":1611934018317,"results":"55","hashOfConfig":"45"},{"size":885,"mtime":1611938592771,"results":"56","hashOfConfig":"45"},{"size":1526,"mtime":1611933055725,"results":"57","hashOfConfig":"45"},{"size":5142,"mtime":1611934219103,"results":"58","hashOfConfig":"45"},{"size":959,"mtime":1611938462603,"results":"59","hashOfConfig":"45"},{"size":1466,"mtime":1611933118229,"results":"60","hashOfConfig":"45"},{"size":450,"mtime":1611932042039,"results":"61","hashOfConfig":"45"},{"size":2057,"mtime":1611937788355,"results":"62","hashOfConfig":"45"},{"size":524,"mtime":1611934050862,"results":"63","hashOfConfig":"45"},{"size":952,"mtime":1611938538691,"results":"64","hashOfConfig":"45"},{"size":1523,"mtime":1611937810340,"results":"65","hashOfConfig":"45"},{"size":3907,"mtime":1611937764132,"results":"66","hashOfConfig":"45"},{"size":4255,"mtime":1611936542758,"results":"67","hashOfConfig":"45"},{"size":4033,"mtime":1611936542606,"results":"68","hashOfConfig":"45"},{"size":2149,"mtime":1611932603790,"results":"69","hashOfConfig":"45"},{"size":2272,"mtime":1611932555957,"results":"70","hashOfConfig":"45"},{"size":844,"mtime":1611932805917,"results":"71","hashOfConfig":"45"},{"size":859,"mtime":1611932179775,"results":"72","hashOfConfig":"45"},{"size":1111,"mtime":1611932628237,"results":"73","hashOfConfig":"45"},{"size":1049,"mtime":1611932536605,"results":"74","hashOfConfig":"45"},{"size":520,"mtime":1611607517982,"results":"75","hashOfConfig":"45"},{"size":6028,"mtime":1611607531541,"results":"76","hashOfConfig":"45"},{"size":520,"mtime":1611607531541,"results":"77","hashOfConfig":"45"},{"size":5531,"mtime":1611607531540,"results":"78","hashOfConfig":"45"},{"size":1101,"mtime":1611932821479,"results":"79","hashOfConfig":"45"},{"size":257,"mtime":1611934239239,"results":"80","hashOfConfig":"45"},{"size":91,"mtime":1611607517955,"results":"81","hashOfConfig":"45"},{"size":847,"mtime":1611932767326,"results":"82","hashOfConfig":"45"},{"size":912,"mtime":1611932765013,"results":"83","hashOfConfig":"45"},{"size":1779,"mtime":1611932726742,"results":"84","hashOfConfig":"45"},{"size":18934,"mtime":1611932874054,"results":"85","hashOfConfig":"45"},{"size":5686,"mtime":1611937450030,"results":"86","hashOfConfig":"45"},{"size":3162,"mtime":1611936507876,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r15tp0",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"92"},"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\layout\\postlogin.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\sidebar\\sidebar.jsx",[],["186","187"],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\loginp\\loginp.js",["188"],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\index.js",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Comparison\\Comparison.jsx",["189","190","191","192"],"/*import useful library*/ \r\nimport { Typography,  notification, \r\n        Row, Col, Button, Select,Space, Card,\r\n        Divider,Descriptions,Tag,\r\n    } from 'antd';\r\nimport React, { useState,useContext,useEffect} from 'react';\r\nimport { HeartFilled,HeartOutlined} from '@ant-design/icons';\r\n\r\n/*import data files*/ \r\nimport categoryRate from \"../../components/common/data/categoryRate.json\";\r\nimport countryRate from \"../../components/common/data/countryRate.json\";\r\nimport employeeRate from \"../../components/common/data/employeeRate.json\";\r\n\r\nimport seed_to_a from \"../../components/common/data/seed_probs.json\";\r\nimport a_to_b from \"../../components/common/data/series_a_probs.json\";\r\n\r\nimport monthRateDefault from \"../../components/common/data/peridoRate.json\";\r\n\r\n/*import chart to plot data*/\r\nimport BarGraphIII from \"../../components/chartTemplate/barIII\"\r\nimport LineGraph from \"../../components/chartTemplate/lineI\"\r\nimport BarGraphIV from \"../../components/chartTemplate/barIV\"\r\n\r\n// import context for data across pages\r\nimport UserContext from '../../components/Context/UserContext.js'\r\n\r\n\r\n/*import css style and image*/ \r\nimport logoEmpty from \"../../components/common/img/logo-social-sq.png\"\r\nimport \"./Comparison.css\"\r\n\r\n/*alias name for better readiness*/\r\nconst {Text,Title} = Typography\r\nconst { Option } = Select;\r\nvar stateXXX = [];\r\nvar k1;\r\nvar k2;\r\n\r\nexport default function Companyinfo () {\r\n  const selectedITEM = useContext(UserContext)\r\n  var basedata = selectedITEM.baseDD\r\n  const [comparisonItem, setComparisonItem] = useState([]);\r\n  const [heartState_1, setheartState_1_comparison] = useState(false);\r\n  const [heartState_2, setheartState_2_comparison] = useState(false);\r\n\r\n  /*state to hold information of a selected company*/\r\n  const [compnameComparison, setCompanyName_comparison] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setComparisonItem(selectedITEM.itemSelected);\r\n    setCompanyName_comparison(selectedITEM.itemName);\r\n  });\r\n\r\n  /*function: clear the selected company*/\r\n  function clearCompanySelected_comparison (value) {\r\n        selectedITEM.itemSelected = [];\r\n        selectedITEM.itemName = [];\r\n        setCompanyName_comparison(selectedITEM.itemName);\r\n        setComparisonItem(selectedITEM.itemSelected);\r\n  }\r\n\r\n  /*function: select a company for comparion\r\n    - return error message if more than 2 companies selected\r\n    - otherwise return success information \r\n        @param: value: set of selected company\r\n  */\r\n  function onChangeCompcomparison (value){\r\n      var templist = [];\r\n      for (var i in basedata){\r\n        var name = basedata[i].name;\r\n          for (var j in value ){\r\n            if( name=== value[j]){\r\n              templist.push(basedata[i])\r\n            }\r\n          }\r\n      }\r\n      if(templist.length !== 0 && templist.length <= 2){\r\n        selectedITEM.itemSelected = templist;\r\n        selectedITEM.itemName = value;\r\n        setCompanyName_comparison(selectedITEM.itemName);\r\n        setComparisonItem(selectedITEM.itemSelected);\r\n        notification['success']({\r\n          message: 'Company Selected',\r\n          description:\r\n          `${value} is(are) selected for comparison.`,\r\n          });\r\n      }else{\r\n        notification['warning']({\r\n          message: 'Function Error',\r\n          description:\r\n          'At most 2 companies can be selected for comparison.',\r\n          });\r\n      }\r\n    \r\n  }\r\n\r\n  /*function: show company name in title bar\r\n      @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function showcompanyname(num){\r\n    var name = \"\";\r\n    if (compnameComparison.length >0){\r\n      if (num === \"0\"){\r\n        name = compnameComparison[0]\r\n      }else if (num=== \"1\"){\r\n        name = compnameComparison[1]\r\n      }\r\n      return <Title level = {4} className = \"text_nameCard_comparison\">{name}</Title>;\r\n    }else{\r\n      return <Title level = {4} className = \"text_nameCard_comparison\">dummy</Title>;\r\n    }\r\n  }\r\n\r\n  /*function: show company name with extra wordings \"next stage of....\" \r\n      @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function showcompanynameC(num){\r\n    var name = \"\";\r\n    if (compnameComparison.length >0){\r\n      if (num === \"0\"){\r\n        name = compnameComparison[0]\r\n      }else if (num=== \"1\"){\r\n        name = compnameComparison[1]\r\n      }\r\n      return <Title level = {5} className = \"text_nameCard_comparison\">{`Next Stage of ${name}`}</Title>;\r\n    }else{\r\n      return <Title level = {5} className = \"text_nameCard_comparison\">dummy</Title>;\r\n    }\r\n  }\r\n\r\n  /*function: show company name with extra wordings \"Predicted Success Rate over next X months of....\" \r\n      @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function showcompanynameA(num){\r\n    var name = \"\";\r\n    if (compnameComparison.length >0){\r\n      if (num === \"0\"){\r\n        name = compnameComparison[0]\r\n      }else if (num=== \"1\"){\r\n        name = compnameComparison[1]\r\n      }\r\n      return <Text strong>{`Predicted Success Rate over next X months of  ${name}`}</Text>;\r\n    }else{\r\n      return <Text>dummy</Text>;\r\n    }\r\n  }\r\n\r\n  /*function: set company logo\r\n    @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function setImageCard (num){\r\n    var itemm;\r\n    if (num === \"0\"){\r\n      if(comparisonItem[0] !== undefined){\r\n        itemm = comparisonItem[0];\r\n        return <img className = \"CompanyLogo_comparison\" src = {itemm.logo_url} alt = {itemm.name + \".logo\"}></img>;\r\n      }else{\r\n        return <img className = \"CompanyLogo_comparison\" src = {logoEmpty} alt = \"logo\"></img>;\r\n      }\r\n    }else if (num=== \"1\"){\r\n      if(comparisonItem[1] !== undefined){\r\n        itemm = comparisonItem[1];\r\n        return <img className = \"CompanyLogo_comparison\" src = {itemm.logo_url} alt = {itemm.name + \".logo\"}></img>;\r\n      }else{\r\n        return <img className = \"CompanyLogo_comparison\" src = {logoEmpty} alt = \"logo\"></img>;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*function: handle the change of my favourite list for company at the left*/\r\n  function onClickHeart1(){\r\n      if (compnameComparison[0] !== undefined ){        \r\n        if(heartState_1 === true){\r\n          setheartState_1_comparison(false);\r\n          notification.open({\r\n            message: 'My Favourite List Change !',\r\n            description:\r\n            `${compnameComparison[0]} has been removed from My Favourite.`,\r\n            icon: <HeartOutlined style={{ color: 'red' }} />,\r\n          });\r\n        }else{\r\n          setheartState_1_comparison(true);\r\n          notification.open({\r\n            message: 'My Favourite List Change !',\r\n            description:\r\n            `${compnameComparison[0]} has been added to My Favourite.`,\r\n            icon: <HeartFilled style={{ color: 'red' }} />,\r\n          });\r\n        }          \r\n    }else{\r\n      notification['warning']({\r\n        message: 'Function Error',\r\n        description:\r\n          'There is no company selected.',\r\n      });\r\n    }\r\n  }\r\n  /*function: handle the change of my favourite list for company at the right*/\r\n  function onClickHeart2(){\r\n    if (compnameComparison[0] !== undefined ){        \r\n      if(heartState_2 === true){\r\n          setheartState_2_comparison(false);\r\n\r\n\r\n        notification.open({\r\n                message: 'My Favourite List Change !',\r\n                description:\r\n                `${compnameComparison[1]} has been removed from My Favourite.`,\r\n                icon: <HeartOutlined style={{ color: 'red' }} />,\r\n              });\r\n      }else{\r\n          setheartState_2_comparison(true);\r\n           notification.open({\r\n                message: 'My Favourite List Change !',\r\n                description:\r\n                `${compnameComparison[1]} has been added to My Favourite.`,\r\n                icon: <HeartFilled style={{ color: 'red' }} />,\r\n              });\r\n      }          \r\n    }else{\r\n      notification['warning']({\r\n        message: 'Function Error',\r\n        description:\r\n          'There is no company selected.',\r\n      });\r\n    }\r\n  }\r\n\r\n  /*function: handle the button: Add to Following List for company at the left*/\r\n  function onClickFollow1(){\r\n    if(compnameComparison[0] === undefined){\r\n      notification['warning']({\r\n      message: 'Function Error',\r\n      description:\r\n      'There is no company selected.',\r\n      });\r\n    }else{\r\n      notification['success']({\r\n        message: 'Operation Success',\r\n        description:\r\n        `${compnameComparison[0]} has been added to the following list. `,\r\n      });\r\n    }\r\n  }\r\n\r\n  /*function: handle the button: Add to Following List for company at the right*/\r\n  function onClickFollow2(){\r\n    if(compnameComparison[1] === undefined){\r\n      notification['warning']({\r\n      message: 'Function Error',\r\n      description:\r\n      'There is no company selected.',\r\n      });\r\n    }else{\r\n      notification['success']({\r\n        message: 'Operation Success',\r\n        description:\r\n        `${compnameComparison[1]} has been added to the following list. `,\r\n      });\r\n    }\r\n  }\r\n\r\n  /*function: handle the button: add to portfolio for company at the left*/\r\n  function onClickPortfolio1(){\r\n    if(compnameComparison[0] === undefined){\r\n      notification['warning']({\r\n      message: 'Function Error',\r\n      description:\r\n      'There is no company selected.',\r\n      });\r\n    }else{\r\n      notification['success']({\r\n        message: 'Operation Success',\r\n        description:\r\n        `${compnameComparison[0]} has been added to the Portfolio. `,\r\n      });\r\n    }\r\n  }\r\n\r\n  /*function: handle the button: add to portfolio for company at the right*/\r\n  function onClickPortfolio2(){\r\n    if(compnameComparison[1] === undefined){\r\n      notification['warning']({\r\n      message: 'Function Error',\r\n      description:\r\n      'There is no company selected.',\r\n      });\r\n    }else{\r\n      notification['success']({\r\n        message: 'Operation Success',\r\n        description:\r\n        `${compnameComparison[1]} has been added to the Portfolio. `,\r\n      });\r\n    }\r\n  }\r\n  \r\n  /*function: helper: process dataset to reformat success_rate as percentage\r\n    @param: datas: dataset\r\n  */ \r\n  function process_data_comparison (datas) {\r\n    for (var i in datas){\r\n      if(typeof(datas[i].success_rate) !== typeof(12)){\r\n        datas[i].success_rate = (Math.trunc(parseFloat(datas[i].success_rate)*10000))/100;\r\n      }\r\n    }\r\n    return datas\r\n  }\r\n\r\n  /*function: get the success rate value for one company \r\n    @param: data1: dataset\r\n              aim: 1: success rate based on category(ies)\r\n                   2: success rate based on company code\r\n  */\r\n  function RateFinder_Comparison(data1, aim, itmm ){\r\n    data1 = process_data_comparison(data1)\r\n    var val = aim? itmm.category_groups_list: itmm.country_code;\r\n    for (var i in data1){\r\n      var check = aim? data1[i].category_groups_list : data1[i].country_code;\r\n      if (check === val){\r\n          return data1[i].success_rate.toString() + \"%\"\r\n      }\r\n    }\r\n  }\r\n\r\n  /*function: return specific predicted rate\r\n    @param: num: item index\r\n            itm: category of the predicted score\r\n  */\r\n  function rateinfo(num, itm) {\r\n\r\n    var itemm;\r\n    if (num === \"0\"){\r\n      if(comparisonItem[0] !== undefined){\r\n        itemm = comparisonItem[0];\r\n        if (itm === \"ind\"){\r\n          if (process_data_comparison(monthRateDefault) !== monthPredicted(0)){\r\n            var sum = stateXXX[0].success_rate + stateXXX[1].success_rate + stateXXX[2].success_rate+stateXXX[3].success_rate +stateXXX[4].success_rate;\r\n            sum = sum/5;\r\n            k1 = sum;\r\n\r\n            return (Math.trunc(k1*100)/100).toString() + \"%\";\r\n          }else{\r\n            return  \"%\";\r\n          }\r\n        }else if (itm === \"country\"){\r\n          return RateFinder_Comparison(countryRate, 0, itemm);\r\n        }else {\r\n          return RateFinder_Comparison(categoryRate, 1, itemm);\r\n        }\r\n    }else{\r\n      return\" __ %\";\r\n      }\r\n    }else if (num=== \"1\"){\r\n      if(comparisonItem[1] !== undefined){\r\n        itemm = comparisonItem[1];\r\n        if (itm === \"ind\"){\r\n          monthPredicted(1)\r\n          var sum = stateXXX[0].success_rate + stateXXX[1].success_rate + stateXXX[2].success_rate+stateXXX[3].success_rate +stateXXX[4].success_rate;\r\n          sum = sum/5;\r\n          k2 = sum;\r\n          return (Math.trunc(k2*100)/100).toString() + \"%\";\r\n        }else if (itm === \"country\"){\r\n          return RateFinder_Comparison(countryRate, 0, itemm);\r\n        }else {\r\n          return RateFinder_Comparison(categoryRate, 1, itemm);\r\n        }\r\n    }else{\r\n      return  \"__ %\";\r\n      }\r\n    }\r\n  }\r\n\r\n  /*function: return one of the company information\r\n  @param:\r\n        num: which company  \r\n      catee: index of company information\r\n            - 1: country code\r\n            - 2: region and city\r\n            - 3: region and city\r\n            - 4: address\r\n            - 5: description\r\n            - 6: total funding amount in usd\r\n            - 7: number of funding rounds\r\n            - 8: company size\r\n  */\r\n  function GetInfoComparison(num, catee){\r\n    var itemm;\r\n    if (num === \"0\"){\r\n      if(comparisonItem[0] !== undefined){\r\n        itemm = comparisonItem[0];\r\n        var ans = \"\";\r\n        switch (catee) {\r\n          case 0:\r\n              ans = itemm.country_code;\r\n              break;\r\n          case 1:\r\n              ans = itemm.region + \", \" + itemm.city;\r\n               break;\r\n          case 2:\r\n              ans = itemm.region + \", \" + itemm.city;\r\n              break;\r\n          case 3:\r\n              ans = itemm.address;\r\n               break;\r\n          case 4:\r\n              ans = itemm.short_description;\r\n               break;\r\n          case 5:\r\n              ans = itemm.total_funding_usd;\r\n               break;\r\n          case 6:\r\n              ans = itemm.num_funding_rounds;\r\n               break;\r\n          case 7:\r\n              ans = itemm.employee_count;\r\n              break;\r\n          case 8:\r\n              ans = itemm.rank;\r\n              break;\r\n          default:\r\n              ans = \"no\";\r\n        } \r\n        return <span>{ans}</span>\r\n      }else{\r\n        return <span>Nil</span>;\r\n      }\r\n    }else if (num=== \"1\"){\r\n      if(comparisonItem[1] !== undefined){\r\n        itemm = comparisonItem[1];\r\n        switch (catee) {\r\n          case 0:\r\n              ans = itemm.country_code;\r\n              break;\r\n          case 1:\r\n              ans = itemm.region + \", \" + itemm.city;\r\n               break;\r\n          case 2:\r\n              ans =  itemm.region + \", \" + itemm.city;\r\n              break;\r\n          case 3:\r\n              ans = itemm.address;\r\n               break;\r\n          case 4:\r\n              ans = itemm.short_description;\r\n               break;\r\n          case 5:\r\n              ans = itemm.total_funding_usd;\r\n               break;\r\n          case 6:\r\n              ans = itemm.num_funding_rounds;\r\n               break;\r\n          case 7:\r\n              ans = itemm.employee_count;\r\n              break;\r\n          case 8:\r\n              ans = itemm.rank;\r\n              break;\r\n          default:\r\n              ans = \"no\";\r\n        } \r\n        return <span>{ans}</span>\r\n      }else{\r\n        return <span>Nil</span>;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /*function: return category tag\r\n      @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function category_comparison(num){\r\n    var itemm;\r\n    if (num === \"0\"){\r\n      if(comparisonItem[0] !== undefined){\r\n        if(comparisonItem[0] !== undefined){\r\n          itemm = comparisonItem[0];\r\n          return itemm.category_groups_list.split(\",\").map(item=>\r\n            {\r\n              return <Tag color={\"blue\"} key={item}>{item}</Tag>;\r\n            })}\r\n        }else{\r\n          return <Tag color={\"yellow\"} key={\"empty\"}>{\"empty\"}</Tag>;\r\n        }\r\n    }else if (num=== \"1\"){\r\n      if(comparisonItem[1] !== undefined){\r\n        itemm = comparisonItem[1];\r\n        return itemm.category_groups_list.split(\",\").map(item=>\r\n          {\r\n            return <Tag color={\"blue\"} key={item}>{item}</Tag>;\r\n          })}\r\n      }else{\r\n        return <Tag color={\"yellow\"} key={\"empty\"}>{\"empty\"}</Tag>;\r\n      }\r\n  }\r\n\r\n  /*function: return status tag\r\n      @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function status_comparison(num){\r\n    if (num === \"0\"){\r\n      if(comparisonItem[0] !== undefined){\r\n              var tag = comparisonItem[0].status;\r\n              let color = \"purple\";\r\n              if (tag.toUpperCase() === 'ACQUIRED') {\r\n                color = 'blue';\r\n              }else if(tag.toUpperCase()  === 'CLOSED'){\r\n                color = 'red';\r\n              }else if (tag.toUpperCase() === 'OPERATING'){\r\n                color = 'green'\r\n              }\r\n\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              );\r\n        }else{\r\n          return <Tag color={\"yellow\"} key={\"empty\"}>{\"empty\"}</Tag>;\r\n        }\r\n    }else if (num=== \"1\"){\r\n        if(comparisonItem[1] !== undefined){\r\n              var tag = comparisonItem[1].status;\r\n              let color = \"purple\";\r\n              if (tag.toUpperCase() === 'ACQUIRED') {\r\n                color = 'blue';\r\n              }else if(tag.toUpperCase()  === 'CLOSED'){\r\n                color = 'red';\r\n              }else if (tag.toUpperCase() === 'OPERATING'){\r\n                color = 'green'\r\n              }\r\n\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              );\r\n        }else{\r\n          return <Tag color={\"yellow\"} key={\"empty\"}>{\"empty\"}</Tag>;\r\n        }\r\n    }\r\n  }\r\n\r\n  /*function: return the next stage information\r\n      @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function next_stage(num){\r\n    var item = comparisonItem[num]\r\n    if(item !== undefined){\r\n      if(item.funding_status === \"seed\"){\r\n        return \"Series A\";\r\n      }else if (item.funding_status === \"series_a\"){\r\n        return \"Series B\";\r\n      }else if (item.funding_status === \"series_b\"){\r\n        return \"Series C\";\r\n      }else if (item.funding_status === \"series_c\"){\r\n        return \"Series D\";\r\n      }else if (item.funding_status === \"series_d\"){\r\n        return \"IPO\";\r\n      }\r\n    }else{\r\n      return \"span\";\r\n    }\r\n  }\r\n\r\n  /*function: truncate the number\r\n    @params: datas: dataset\r\n  */\r\n  function process_data_numeric_comparison(datas) {\r\n    for (var i in datas){\r\n      for(var j in datas[i]){\r\n        if (typeof(datas[i][j]) === typeof(12)){\r\n          if(datas[i][j] > 0 && datas[i][j] <1){\r\n            datas[i][j] = (Math.trunc(datas[i][j] *10000))/100\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return datas\r\n\r\n  }\r\n\r\n\r\n  /*function: find respected projected monthly rate data\r\n      @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function monthPredicted(num){\r\n    var tempdata = \"\";\r\n    var flag = 1;\r\n    var item = comparisonItem[num]\r\n    if(item !== undefined){\r\n      if (item.funding_status === \"seed\"){\r\n        tempdata = process_data_numeric_comparison(seed_to_a);\r\n      }else if (item.funding_status === \"series_a\"){\r\n        tempdata =  process_data_numeric_comparison(a_to_b);\r\n      }else{\r\n        flag = 0;\r\n        tempdata = process_data_comparison(monthRateDefault);\r\n      }\r\n      var ans = [];\r\n      if (flag === 1){\r\n        for (var i in tempdata){\r\n          if (tempdata[i].name === item.name){\r\n            const entries = Object.entries(tempdata[i])\r\n            let id = 0;\r\n            ans = entries.map(function(itemX){\r\n              if(itemX[0] !== \"name\" && itemX[0] !== \"key\") {\r\n                var info = {\r\n                  key: id,\r\n                  period: itemX[0],\r\n                  success_rate: itemX[1],\r\n                }\r\n                id++;\r\n                return info;\r\n              }\r\n            })\r\n            break;\r\n          }\r\n        }\r\n        ans.shift()\r\n        ans.shift()\r\n        stateXXX = []\r\n        stateXXX.push(ans.pop())\r\n        stateXXX.push(ans.pop())\r\n        stateXXX.push(ans.pop())\r\n        stateXXX.push(ans.pop())\r\n        stateXXX.push(ans.pop())\r\n        return ans;\r\n      }else{\r\n        return tempdata;\r\n      }\r\n    }else{\r\n      return process_data_comparison(monthRateDefault);\r\n    }\r\n  }\r\n\r\n  /*function: return category group list for reference line in bar graph\r\n      @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function referenceline (num){\r\n      if (comparisonItem[num] !== undefined){\r\n        return comparisonItem[num].category_groups_list;\r\n      }else{\r\n        return \"\"\r\n      }\r\n  }\r\n\r\n  /*function: return company size for reference point in line graph\r\n      @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function getLinePos(num){\r\n    if (comparisonItem[num] !== undefined){\r\n      return comparisonItem[num].employee_count;\r\n    }else{\r\n      return \"\"\r\n    }\r\n  }\r\n\r\n  /*function: return company size success rate\r\n      @param: num: 1: company at the left\r\n                 2: company at the right\r\n  */\r\n  function getLineVal(num){\r\n    if (comparisonItem[num] !== undefined){\r\n      var target = comparisonItem[num].employee_count;\r\n      for (var i in employeeRate){\r\n        if (employeeRate[i].employee === target){\r\n          return employeeRate[i].success_rate;\r\n        }\r\n      }\r\n    }else{\r\n      return \"\"\r\n    }\r\n  }\r\n    return (\r\n        <div className = \"comparisoninfopager\">\r\n{/* Search Bar */}\r\n          <Row className = \"searchbar_comparison\">\r\n                <div className = \"SearchCompany_comparison\">\r\n                    <Space size = \"middle\">\r\n                          <div className = \"searchtitle_comparison\">\r\n                            <Text strong style = {{display:\"inline-block\"}} >Company Search :</Text>\r\n                          </div>\r\n                          \r\n                          <Select\r\n                            mode=\"multiple\"\r\n                            className = \"selector_comparison\"\r\n                            showSearch\r\n                            style={{ width: '800px' }}\r\n                            placeholder=\"Please select a company\"\r\n                            onChange={onChangeCompcomparison}\r\n                            value = {compnameComparison}\r\n                            onSearch={onChangeCompcomparison}\r\n                            filterOption={(inputValue, option) => \r\n                              option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}\r\n                            > \r\n                            {basedata.map(item => (\r\n                                <Option key={item.key} value = {item.name}>\r\n                                  {item.name}\r\n                                </Option>\r\n                            ))}\r\n                          </Select>\r\n\r\n                          <Button type=\"primary\" className = \"clearSelection_comparison\" \r\n                          onClick = {clearCompanySelected_comparison}\r\n                          >\r\n                            <p className = \"clearSelectionText_comparison\" >Clear Selection</p>\r\n                          </Button>\r\n                      </Space>\r\n                  </div>\r\n            </Row>\r\n{/* Title Bar */}\r\n            <Row className = \"titlebar_comparison\" >\r\n                <Col span = {11}> {/*1st company*/}\r\n                  <Row>\r\n                    <Col span = {16} >\r\n                      <Row style = {{display:\"flex\", flexDirection:\"row\"}} justify=\"space-around\" align=\"middle\">\r\n                        <Col span = {8} >\r\n                          <div className = \"CompanyLogo_holder_comparison\">\r\n                          {setImageCard(\"0\")}\r\n                          </div >\r\n                        </Col>\r\n                        <Col span = {16}  className = \"nameCard_comparison\">\r\n                            {showcompanyname(\"0\")}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    \r\n                    <Col span = {8} >\r\n                        <Row justify=\"start\" align=\"middle\">\r\n                            <Button \r\n                                type = \"link\" \r\n                                icon = {heartState_1 === false?<HeartOutlined style = {{color:\"red\"}}/>:<HeartFilled style = {{color:\"red\"}}/>} \r\n                                onClick = {onClickHeart1}\r\n                              >\r\n                              <Text type=\"danger\">\r\n                                Add to My Favourite\r\n                              </Text>\r\n                            </Button>\r\n                        </Row>\r\n                        <Row>\r\n                            <Button \r\n                            type=\"primary\"\r\n                            onClick = {onClickFollow1}\r\n                            className = \"button_comparison\"\r\n                          >\r\n                          Add to Following List\r\n                          </Button>\r\n                      </Row>\r\n                      <Row>\r\n                            <Button \r\n                            type=\"primary\"\r\n                            onClick = {onClickPortfolio1}\r\n                            className = \"button_comparison\"\r\n                          >\r\n                          Add to Portfolio\r\n                          </Button>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                \r\n                <Col span = {1}>\r\n                <Divider type = \"vertical\" style = {{height:\"100%\"}}/>\r\n                <Divider type = \"vertical\" style = {{height:\"100%\"}}/>\r\n\r\n                </Col>\r\n\r\n                <Col span = {12}> {/*2nd company*/}\r\n                <Row>\r\n                    <Col span = {16} >\r\n                      <Row style = {{display:\"flex\", flexDirection:\"row\"}} justify=\"space-around\" align=\"middle\">\r\n                        <Col span = {8} >\r\n                          <div className = \"CompanyLogo_holder_comparison\">\r\n                          {setImageCard(\"1\")}\r\n                          </div >\r\n                        </Col>\r\n                        <Col span = {16}  className = \"nameCard_comparison\">\r\n                            {showcompanyname(\"1\")}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    \r\n                    <Col span = {8} >\r\n                        <Row justify=\"start\" align=\"middle\">\r\n                            <Button \r\n                                type = \"link\" \r\n                                icon = {heartState_2 === false?<HeartOutlined style = {{color:\"red\"}}/>:<HeartFilled style = {{color:\"red\"}}/>} \r\n                                onClick = {onClickHeart2}\r\n                              >\r\n                              <Text type=\"danger\">\r\n                                Add to My Favourite\r\n                              </Text>\r\n                            </Button>\r\n                        </Row>\r\n                        <Row>\r\n                            <Button \r\n                            type=\"primary\"\r\n                            onClick = {onClickFollow2}\r\n                            className = \"button_comparison\"\r\n                          >\r\n                          Add to Following List\r\n                          </Button>\r\n                      </Row>\r\n                      <Row>\r\n                            <Button \r\n                            type=\"primary\"\r\n                            onClick = {onClickPortfolio2}\r\n                            className = \"button_comparison\"\r\n                          >\r\n                          Add to Portfolio\r\n                          </Button>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n{/* Main Content */}\r\n            <Row className = \"contentbox_comparison\">\r\n                <Col span = {11}> {/*1st company*/}\r\n                    <Row>\r\n                      <Col span = {14}>\r\n                          <Descriptions\r\n                            title = \"Basic Fact\"\r\n                            size = \"small\"\r\n                            bordered\r\n                            column={1}\r\n                            className = \"CompanyInfoBox_comparison\"\r\n                            contentStyle = {{\r\n                              fontSize:\"small\"\r\n                            }}\r\n                          >\r\n                            <Descriptions.Item label=\"Country\">{GetInfoComparison(\"0\", 0)}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"City\">{GetInfoComparison(\"0\", 1)}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Address\">{GetInfoComparison(\"0\", 3)}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Description\">{GetInfoComparison(\"0\", 4)}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Category\">{category_comparison(\"0\")}</Descriptions.Item>\r\n                          </Descriptions>\r\n                      </Col>\r\n                      <Col span = {10}>\r\n                        <Descriptions\r\n                          title = \"Financial Features\"\r\n                          size = \"small\"\r\n                          bordered\r\n                          column={1}\r\n                          className = \"CompanyInfoBox_comparison\"\r\n                        >\r\n                          <Descriptions.Item label=\"Funding Amount (USD)\">{GetInfoComparison(\"0\", 5)}</Descriptions.Item>\r\n                          <Descriptions.Item label=\"Number of Funding Rounds\">{GetInfoComparison(\"0\", 6)}</Descriptions.Item>\r\n                          <Descriptions.Item label=\"Company Size\">{GetInfoComparison(\"0\", 7)}</Descriptions.Item>\r\n                          <Descriptions.Item label=\"Status\">{status_comparison(\"0\")}</Descriptions.Item>\r\n                          <Descriptions.Item label=\"Rank\">{GetInfoComparison(\"0\", 8)}</Descriptions.Item>\r\n                        </Descriptions>\r\n                      </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row justify = \"space-around\" align = \"middle\"> {/* numeric score*/}\r\n                          <div \r\n                            type=\"primary\" \r\n                            id = \"suggestionrate_comparison\"\r\n                            className = \"suggestionrate\"\r\n                            style ={{\r\n                              backgroundColor: \"#2f4858\",\r\n                              borderColor: \"#2f4858\",\r\n                              width: \"30%\",\r\n                              borderRadius: \"25px\",\r\n                              height:\"6vh\",\r\n                              color:\"white\",\r\n                              display:\"flex\",\r\n                              justifyContent:\"center\",\r\n                              alignContent:\"center\",\r\n                              alignItems:\"center\",\r\n                              fontSize:\"medium\",\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              Individual Success Rate:\r\n                              <br/>\r\n                              <Title style = {{color:\"white\"}} level = {4} >{rateinfo(\"0\", \"ind\")}</Title>\r\n                            </div>\r\n                          </div>\r\n                          <div \r\n                            type=\"primary\" \r\n                            id = \"suggestionrate_comparison\"\r\n                            className = \"suggestionrate\"\r\n                            style ={{\r\n                              backgroundColor: \"#2176ff\",\r\n                              borderColor: \"#2176ff\",\r\n                              width: \"30%\",\r\n                              borderRadius: \"25px\",\r\n                              height:\"6vh\",\r\n                              color:\"white\",\r\n                              display:\"flex\",\r\n                              justifyContent:\"center\",\r\n                              alignItems:\"center\",\r\n                              fontSize:\"medium\",\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              Success Rate (Country):\r\n                              <br/>\r\n                              <Title style = {{color:\"white\"}} level = {4} >{rateinfo(\"0\",\"country\") }</Title>\r\n                            </div>\r\n                          </div>\r\n                          <div \r\n                            type=\"primary\" \r\n                            id = \"suggestionrate_comparison\"\r\n                            className = \"suggestionrate\"\r\n                            style ={{\r\n                              backgroundColor: \"#33a1fd\",\r\n                              borderColor: \"#33a1fd\",\r\n                              width: \"30%\",\r\n                              borderRadius: \"25px\",\r\n                              height:\"6vh\",\r\n                              color:\"white\",\r\n                              display:\"flex\",\r\n                              justifyContent:\"center\",\r\n                              alignItems:\"center\",\r\n                              fontSize:\"medium\",\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              Success Rate (Category):\r\n                              <br/>\r\n                              <Title style = {{color:\"white\"}} level = {4} >{rateinfo(\"0\",\"category\") }</Title>\r\n                            </div>\r\n                          </div>\r\n\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Col span = {1}> {/* divider*/ }\r\n                  <Divider type = \"vertical\" style = {{height:\"100%\"}}/>\r\n                  <Divider type = \"vertical\" style = {{height:\"100%\"}}/>\r\n                </Col>\r\n\r\n                <Col span = {12}> {/*2nd company*/}\r\n                    <Row>\r\n                      <Col span = {14}>\r\n                          <Descriptions\r\n                            title = \"Basic Fact\"\r\n                            size = \"small\"\r\n                            bordered\r\n                            column={1}\r\n                            className = \"CompanyInfoBox_comparison\"\r\n                            contentStyle = {{\r\n                              fontSize:\"small\"\r\n                            }}\r\n                          >\r\n                            <Descriptions.Item label=\"Country\">{GetInfoComparison(\"1\", 0)}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"City\">{GetInfoComparison(\"1\", 1)}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Address\">{GetInfoComparison(\"1\", 3)}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Description\">{GetInfoComparison(\"1\", 4)}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Category\">{category_comparison(\"1\")}</Descriptions.Item>\r\n                          </Descriptions>\r\n                      </Col>\r\n                      <Col span = {10}>\r\n                        <Descriptions\r\n                          title = \"Financial Features\"\r\n                          size = \"small\"\r\n                          bordered\r\n                          column={1}\r\n                          className = \"CompanyInfoBox_comparison\"\r\n                        >\r\n                          <Descriptions.Item label=\"Funding Amount (USD)\">{GetInfoComparison(\"1\", 5)}</Descriptions.Item>\r\n                          <Descriptions.Item label=\"Number of Funding Rounds\">{GetInfoComparison(\"1\", 6)}</Descriptions.Item>\r\n                          <Descriptions.Item label=\"Company Size\">{GetInfoComparison(\"1\", 7)}</Descriptions.Item>\r\n                          <Descriptions.Item label=\"Status\">{status_comparison(\"1\")}</Descriptions.Item>\r\n                          <Descriptions.Item label=\"Rank\">{GetInfoComparison(\"1\", 8)}</Descriptions.Item>\r\n                        </Descriptions>\r\n                      </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row justify = \"space-around\" align = \"middle\"> {/* numeric score*/}\r\n                          <div \r\n                            type=\"primary\" \r\n                            id = \"suggestionrate_comparison\"\r\n                            className = \"suggestionrate\"\r\n                            style ={{\r\n                              backgroundColor: \"#2f4858\",\r\n                              borderColor: \"#2f4858\",\r\n                              width: \"30%\",\r\n                              borderRadius: \"25px\",\r\n                              height:\"6vh\",\r\n                              color:\"white\",\r\n                              display:\"flex\",\r\n                              justifyContent:\"center\",\r\n                              alignContent:\"center\",\r\n                              alignItems:\"center\",\r\n                              fontSize:\"medium\",\r\n                              \r\n                              // color: \"white\"\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              Individual Success Rate:\r\n                              <br/>\r\n                              <Title style = {{color:\"white\"}} level = {4} >{rateinfo(\"1\", \"ind\")}</Title>\r\n                            </div>\r\n                          </div>\r\n                          <div \r\n                            type=\"primary\" \r\n                            id = \"suggestionrate_comparison\"\r\n                            className = \"suggestionrate\"\r\n                            style ={{\r\n                              backgroundColor: \"#2176ff\",\r\n                              borderColor: \"#2176ff\",\r\n                              width: \"30%\",\r\n                              borderRadius: \"25px\",\r\n                              height:\"6vh\",\r\n                              color:\"white\",\r\n                              display:\"flex\",\r\n                              justifyContent:\"center\",\r\n                              alignItems:\"center\",\r\n                              fontSize:\"medium\",\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              Success Rate (Country):\r\n                              <br/>\r\n                              <Title style = {{color:\"white\"}} level = {4} >{rateinfo(\"1\",\"country\") }</Title>\r\n                            </div>\r\n                          </div>\r\n                          <div \r\n                            type=\"primary\" \r\n                            id = \"suggestionrate_comparison\"\r\n                            className = \"suggestionrate\"\r\n                            style ={{\r\n                              backgroundColor: \"#33a1fd\",\r\n                              borderColor: \"#33a1fd\",\r\n                              width: \"30%\",\r\n                              borderRadius: \"25px\",\r\n                              height:\"6vh\",\r\n                              color:\"white\",\r\n                              display:\"flex\",\r\n                              justifyContent:\"center\",\r\n                              alignItems:\"center\",\r\n                              fontSize:\"medium\",\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              Success Rate (Category):\r\n                              <br/>\r\n                              <Title style = {{color:\"white\"}} level = {4} >{rateinfo(\"1\",\"category\") }</Title>\r\n                            </div>\r\n                          </div>\r\n\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            \r\n{/* Graph Bar */}\r\n            <Row className = \"graphbar_comparison\">\r\n\r\n              \r\n              <Row className = \"graph area\" style = {{width:\"100%\"}}>\r\n                <Col span = {3} style = {{display:\"flex\", flexDirection:\"column\"}}>\r\n                    <Space direction=\"vertical\">\r\n                    <Card bordered={false} size=\"small\"  className = \"StatusCard_comparison\">\r\n                        {showcompanynameC(\"0\")}\r\n                       <Title level = {5}>{next_stage(0)}</Title>\r\n                    </Card>\r\n                    <Card bordered={false} size=\"small\"  className = \"StatusCard_comparison\">\r\n                    {showcompanynameC(\"1\")}\r\n                       <Title level = {5}>{next_stage(1)}</Title>\r\n                    </Card>\r\n                    </Space>\r\n                </Col>\r\n                <Col span = {7}>\r\n                    {showcompanynameA(\"0\")}\r\n                        <div >\r\n                          <BarGraphIV\r\n                          data = {monthPredicted(0)}\r\n                          Xaiss = \"period\"\r\n                          Yaiss = \"success_rate\"\r\n                      /> \r\n                      </div> \r\n                    {showcompanynameA(\"1\")}\r\n                      <div >\r\n                        <BarGraphIV\r\n                        data = {monthPredicted(1)}\r\n                        Xaiss = \"period\"\r\n                        Yaiss = \"success_rate\"\r\n                    /> \r\n                    </div> \r\n                </Col>\r\n                <Col span = {7}>\r\n                  <Title level = {5}>Distribution of Predicted Score Based on Category</Title>\r\n                  <div ><BarGraphIII\r\n                                      dataS = {process_data_comparison(categoryRate)}  \r\n                                      KeyX = \"category_groups_list\"\r\n                                      KeyY = \"success_rate\"\r\n                                      RefX = {referenceline(0)}\r\n                                      RefY = {referenceline(1)}\r\n                                  /> </div> \r\n                </Col>\r\n                <Col span = {7}>\r\n                <Title level = {5}>Distribution of Predicted Score Based on Employee Size</Title>\r\n                  <div><LineGraph\r\n                      dataS = {process_data_comparison(employeeRate)}\r\n                      X1 = {getLinePos(0)}\r\n                      Y1 = {getLineVal(0)}\r\n                      X2 = {getLinePos(1)}\r\n                      Y2 = {getLineVal(1)}\r\n                  />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Row>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Datacenter\\Datacenter.jsx",["193","194"],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Companyinfo\\Companyinfo.jsx",["195"],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Dashboard\\Dashboard.jsx",["196","197","198","199","200","201","202","203","204"],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\infocard\\chartbox\\chartnews.jsx",["205"],"import React from 'react';\r\nimport { Typography,  Divider } from 'antd';\r\nimport img1 from \"./stocks-vs-market.jpg\"\r\nimport \"./chartnews.css\"\r\n\r\nconst { Title } = Typography;\r\nconst cardContainer = document.querySelector('.react-card');\r\n\r\n/*Component: React component for the front side of the card*/\r\nclass CardFront extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className='card-side side-front'>\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-xs-6'>\r\n              <img src={img1} alt=\"img\" />\r\n            </div>\r\n\r\n            <div className='col-xs-6 side-front-content'>\r\n            \r\n              <Divider orientation = \"center\" plain> \r\n                    <h2>Whats New in the Chart</h2>\r\n                </Divider>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*Component: React component for the back side of the card*/\r\nclass CardBack extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className='card-side side-back'>\r\n        <div className='container-fluid'>\r\n            <Title level = {3}>New Predictions for South Asian</Title>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, \r\n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \r\n                In aliquam sem fringilla ut morbi tincidunt. Imperdiet nulla malesuada \r\n                pellentesque elit. Placerat in egestas erat imperdiet sed euismod nisi porta.</p>\r\n            <Divider/>\r\n            <Title level = {3}>Adjusted Benchmark for investment possibilities</Title>\r\n            <p>Nisl nisi scelerisque eu ultrices vitae. Nunc sed velit dignissim sodales ut eu. \r\n                Ut tortor pretium viverra suspendisse. Lectus quam id leo in vitae turpis massa. \r\n                Risus at ultrices mi tempus imperdiet nulla malesuada pellentesque elit.</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*Component: React component of the card*/\r\nclass Card extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className='card-container'>\r\n        <div className='card-body'>\r\n          <CardBack />\r\n\r\n          <CardFront />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card;","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\data\\transactiondata.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\router\\routes.js",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\App.js",["206","207"],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\infocard\\newsboard\\newsbody.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\topbar\\topbar.jsx",["208","209"],"import React from \"react\";\r\nimport { NavLink  } from \"react-router-dom\";\r\n\r\n/*import antd UI component */\r\nimport { Menu , Layout, Button, Input, Badge} from 'antd';\r\n\r\n/*import useful image and icons */\r\nimport logoimage from \"./img/ubs-logo.png\"\r\nimport { BellOutlined,SearchOutlined,LogoutOutlined } from '@ant-design/icons';\r\n\r\n/*import logout function */\r\nimport {logout} from \"../../Auth/userToken.js\"\r\n\r\n/*import topbar styling*/\r\nimport \"./topbar.css\"\r\n\r\n\r\nconst { Header } = Layout;\r\n\r\n/*function: Topbar */\r\nexport default function Topbar() {\r\n\r\n\r\n    return (\r\n        \r\n        <Header className=\"header\" \r\n        style = {{\r\n            background: \"white\", \r\n            height:\"60px\", \r\n            margin: \"0px\", \r\n            position: \"fixed\", \r\n            width: \"100vw\",\r\n            zIndex: \"2\",\r\n            display: \"inline\",\r\n        }} \r\n \r\n        >\r\n        {/* logo holder  */}\r\n                    <a href=\"s\"><img src = {logoimage} className =\"logoimage\" alt = \"\"/></a>\r\n\r\n        {/* left top bar */}\r\n                    <Menu mode=\"horizontal\" id = \"topbarLeft\"className = \"topbarLeft\" data-toggle=\"collapse\" selectedKeys = \"\">\r\n                        <Menu.Item key=\"1\" className = \"Item Overview\" aria-expanded = \"true\">\r\n                            <NavLink to =\"/pp/Dashboard\" >                                \r\n                                <p className = \"itemtext\" >\r\n                                    Overview\r\n                                </p>\r\n                            </NavLink>\r\n                            </Menu.Item>\r\n                        <Menu.Item key=\"2\" className = \"Item Database\" aria-expanded = \"true\">\r\n                            <NavLink to =\"/pp/Database\" >                                \r\n                                <p className = \"itemtext\" >\r\n                                    Database\r\n                                </p>\r\n                            </NavLink>\r\n                        </Menu.Item>\r\n                    </Menu >\r\n\r\n        {/* right top bar */}\r\n                    <div className = \"topRight-holder\">\r\n\r\n                        <Menu mode=\"horizontal\" className = \"topbarRight\" id = \"topRight\" selectedKeys = \"None\">\r\n                            <Menu.Item className = \"BuTrend\" id = \"item3\" key =\"item3\" >\r\n                                <NavLink to =\"/pp/Search\" >\r\n                                    <Button type=\"text\" key=\"3\" className = \"Button Search\"><p className = \"buttontext\" >Search</p></Button>\r\n                                </NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item className = \"BuTrend\" id = \"item4\" key =\"item4\" >\r\n                                <NavLink to =\"/pp/Favourite\" className = \"BuTrend\" id = \"item4\">\r\n                                    <Button type=\"text\" key=\"4\" className = \"Button MyFav\"><p className = \"buttontext\" >My Favourites</p></Button>\r\n                                </NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item className = \"BuTrend\" id = \"item5\" key =\"item5\" >\r\n                                <NavLink to =\"/pp/Trend\" className = \"BuTrend\" id = \"item5\">\r\n                                    <Button type=\"link\" key=\"5\" className = \"Button Trending\"><p className = \"buttontext\"  to = \"/pp/Trend\">Trending</p></Button>\r\n                                </NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item className = \"BuTrend\" id = \"item6\" key =\"item6\" >\r\n                                <div id = \"item6\">\r\n                                    <Input placeholder=\"Help Desk\" prefix={<SearchOutlined />} className = \"searchbox\"  ></Input>\r\n                                </div>\r\n                            </Menu.Item>\r\n                            <Menu.Item className = \"BuTrend\" id = \"item7\" key =\"item7\" >\r\n                                <Button size = \"large\" type=\"text\" key=\"7\" className = \"notification\" icon={<BellOutlined />} id = \"item7\">\r\n                                    <Badge size=\"default\" count={5} overflowCount={10} offset = {[-5,-15]} > \r\n                                        <a href=\"#\" className=\"notibell\"/>\r\n                                    </Badge>\r\n                                </Button>\r\n                            </Menu.Item>\r\n                            <Menu.Item className = \"BuTrend\" id = \"item8\" key =\"item8\" >\r\n                                <NavLink to =\"/pp/Account\" className = \"BuAcc\"  id = \"item8\">\r\n                                    <Button key=\"8\" className = \"Button MyAcc\"><p className = \"buttonACtext\" >My Account</p></Button>\r\n                                </NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item className = \"BuTrend\" id = \"item9\" key =\"item9\" >\r\n                                <Button type=\"text\" key=\"9\" className = \"Exit\" icon={<LogoutOutlined />} id = \"item9\" onClick = {logout}></Button>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </div>\r\n\r\n        </Header>\r\n    );\r\n}\r\n","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Mapview\\Mapview.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\infocard\\newsboard\\newsbox.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\Auth\\userToken.js",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Datacenter\\KeyItem\\country_code.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\router\\routing.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Trend\\Trend.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Datacenter\\KeyItem\\unique_cat_name.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Datacenter\\KeyItem\\col.jsx",["210"],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\MapV2\\mapChartwithAnnotate.jsx",["211"],"import React, { useEffect, useState} from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule,\r\n  ZoomableGroup,\r\n  Annotation\r\n} from \"react-simple-maps\";\r\n\r\n/*load the complete country success rate dataset */\r\nimport basedata from \"../data/countryRate.json\"\r\n\r\n/*link of geography location and population data */\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n\r\nconst colorScale = scaleLinear()\r\n  .domain([0, 100])\r\n  .range([\"#f6ea8c\", \"#492540\"]);\r\n\r\n/*component: responsive heat map of country scale with annotation of company location\r\n  setTooltipContent: function return to set up the tooltip\r\n  CompnayShow: company information to be shown in the map\r\n  CompanyName: name of the company to be shown\r\n\r\n*/\r\nconst MapChart = ({ setTooltipContent , CompanyShow,CompanyName})=> {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n      setData(basedata);\r\n  }, []);\r\n  \r\n  function getCorrdinate(){\r\n    return [CompanyShow.longitude,CompanyShow.latitude]\r\n  }\r\n\r\n\r\n  return (\r\n    <ComposableMap\r\n      data-tip=\"\"\r\n      projectionConfig={{\r\n        rotate: [-10, 0, 0],\r\n        scale: 150\r\n      }}\r\n      style ={{\r\n          width:\"90%\", \r\n          height:\"45%\",\r\n    \r\n    }}\r\n    >\r\n      <ZoomableGroup>\r\n        <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n        <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n        { (\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n\r\n              geographies.map((geo) => {\r\n                const d = data.find((s) => s.country_code === geo.properties.ISO_A3);\r\n\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmkey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                        const { NAME, POP_EST } = geo.properties;\r\n                        if(d ){\r\n                        setTooltipContent(`${NAME} — ${d.success_rate}%`);}\r\n                        else{setTooltipContent(`${NAME} — No Info`);}\r\n                      }}\r\n                      onMouseLeave={() => {\r\n                        setTooltipContent(\"\");\r\n                        \r\n                      }}\r\n                      style={{\r\n                        // default: {\r\n                        //   fill: \"#D6D6DA\",\r\n                        //   outline: \"none\"\r\n                        // },\r\n                        // hover: {\r\n                        //   fill: \"#F53\",\r\n                        //   outline: \"none\"\r\n                        // },\r\n                        // pressed: {\r\n                        //   fill: \"#E42\",\r\n                        //   outline: \"none\"\r\n                        // }\r\n                      }}\r\n                    fill={d ? colorScale(d.success_rate) : \"#F5F4F6\"}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n          \r\n        )}\r\n        <Annotation\r\n        subject={getCorrdinate()}\r\n        dx={-70}\r\n        dy={-20}\r\n        connectorProps={{\r\n          stroke: \"#FF5533\",\r\n          strokeWidth: 3,\r\n          strokeLinecap: \"round\"\r\n        }}\r\n      >\r\n        <text x=\"-6\" textAnchor=\"end\" alignmentBaseline=\"middle\" fill=\"#F53\" style ={{fontSize:\"x-large\"}}>\r\n          {CompanyName}\r\n        </text>\r\n      </Annotation>\r\n      </ZoomableGroup>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\MapV2\\mapChartNoAnnotate.jsx",["212","213","214"],"import React, { useEffect, useState, memo } from \"react\";\r\nimport { csv } from \"d3-fetch\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule,\r\n  ZoomableGroup\r\n} from \"react-simple-maps\";\r\n\r\nimport basedata from \"../data/countryRate.json\"\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n// const rounded = (num) => {\r\n//   if (num > 1000000000) {\r\n//     return Math.round(num / 100000000) / 10 + \"Bn\";\r\n//   } else if (num > 1000000) {\r\n//     return Math.round(num / 100000) / 10 + \"M\";\r\n//   } else {\r\n//     return Math.round(num / 100) / 10 + \"K\";\r\n//   }\r\n// };\r\n\r\nconst colorScale = scaleLinear()\r\n  .domain([0, 100])\r\n  .range([\"#ffedea\", \"#ff5233\"]);\r\n\r\n\r\nconst MapChart = ({ setTooltipContent }) => {\r\n  const [data, setData] = useState([]);\r\n  /*function: process data to return percentage data*/\r\n\r\n  function process_data (datas) {\r\n    for (var i in datas){\r\n      if(typeof(datas[i].success_rate) !== typeof(12)){\r\n        datas[i].success_rate = (Math.trunc(parseFloat(datas[i].success_rate)*10000))/100;\r\n      }\r\n    }\r\n    // console.log(datas)\r\n    return datas\r\n  }\r\n\r\n  useEffect(() => {\r\n      setData(process_data(basedata));\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <ComposableMap\r\n      data-tip=\"\"\r\n      projectionConfig={{\r\n        rotate: [-10, 0, 0],\r\n        scale: 200\r\n      }}\r\n      style ={{\r\n          width:\"100%\", \r\n          height:\"70vh\",\r\n        backgroundColor:\"white\"\r\n    \r\n    }}\r\n    >\r\n      <ZoomableGroup>\r\n        <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n        <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n        { (\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                const d = data.find((s) => s.country_code === geo.properties.ISO_A3);\r\n                // console.log(d);\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmkey}\r\n                    geography={geo}\r\n                    onMouseEnter={() => {\r\n                        const { NAME, POP_EST } = geo.properties;\r\n                        if(d){\r\n                        setTooltipContent(`${NAME} — ${Math.trunc(d.success_rate*10000)/10000}%`);}\r\n                        else{setTooltipContent(`${NAME} — No Info`);}\r\n                      }}\r\n                      onMouseLeave={() => {\r\n                        setTooltipContent(\"\");\r\n                        \r\n                      }}\r\n                      style={{\r\n                        default: {\r\n                          // fill: \"#D6D6DA\",\r\n                          outline:\"none\"\r\n                        },\r\n                        hover: {\r\n                          fill: \"#6b7e94\",\r\n                          outline: \"dotted\"\r\n                        },\r\n                        pressed: {\r\n                          fill: \"#E42\",\r\n                          outline: \"none\"\r\n                        }\r\n                      }}\r\n                    fill={d ? colorScale(parseFloat(d.success_rate)) : \"#F5F4F6\"}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        )}\r\n      </ZoomableGroup>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n// import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\n\r\n// // import \"./styles.css\";\r\n\r\n// const geoUrl =\r\n//   \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n// const Mapp = () => (\r\n//   <div>\r\n//     <ComposableMap>\r\n//       <Geographies geography={geoUrl}>\r\n//         {({ geographies }) =>\r\n//           geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\r\n//         }\r\n//       </Geographies>\r\n//     </ComposableMap>\r\n//   </div>\r\n// );\r\n\r\n// export default Mapp;","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\barIV.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\barII.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\radar.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\bar.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\lineI.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\barIII.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Trend\\TrendingPager\\ExtraBumb.jsx",["215","216","217","218"],"// import React from 'react';\r\n// import './Landing.css';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { Result, Button,Tabs } from 'antd';\r\n\r\nexport default function Mapview () {\r\n    // const [token, setToken] = useState();\r\n\r\n    return (\r\n        <div style = {{backgroundColor:\"white\", height:\"80vh\"}}>\r\n        <Result\r\n        status=\"500\"\r\n        title=\"500\"\r\n        subTitle=\"Sorry, something went wrong.\" \r\n        \r\n      />\r\n      </div>\r\n        \r\n    )\r\n}\r\n","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Trend\\TrendingPager\\seedToa.jsx",["219","220","221","222","223","224","225"],"// import React from 'react';\r\n// import './Landing.css';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState,useEffect } from 'react';\r\nimport { \r\n    Result, Button,Tabs,\r\n    Row, Col, Typography,Divider\r\n} from 'antd';\r\n\r\n\r\n// import graphical chart template\r\nimport VBarI from \"../../../components/chartTemplate/verticalBarI.jsx\"\r\n// import necessary dataset\r\nimport seed_probs from \"../../../components/common/data/seed_probs.json\"\r\n\r\n// import style\r\nconst {Text,Title} = Typography\r\n\r\nexport default function Mapview () {\r\n    // const [token, setToken] = useState();\r\n    const formattedData = {\r\n        month_22:[],\r\n        month_24:[],\r\n        month_26:[],\r\n        month_28:[],\r\n        month_30:[],\r\n        month_32:[],\r\n    }\r\n\r\n    /*function: truncate the number*/\r\n    function process_data_numeric(datas) {\r\n    for (var i in datas){\r\n        for(var j in datas[i]){\r\n        if (typeof(datas[i][j]) === typeof(12)){\r\n            if(datas[i][j] > 0 && datas[i][j] <1){\r\n            datas[i][j] = (Math.trunc(datas[i][j] *10000))/100\r\n            }\r\n        }\r\n        }\r\n    }\r\n    return datas\r\n\r\n    }\r\n\r\n    function stringToColor(str){\r\n        var hash = 0;\r\n        for(var i=0; i < str.length; i++) {\r\n          hash = str.charCodeAt(i) + ((hash << 4) - hash);\r\n        }\r\n        var color = Math.abs(hash).toString(16).substring(0, 6);\r\n      \r\n        return \"#\" + '000000'.substring(0, 6 - color.length) + color;\r\n      }\r\n\r\n    function formatHelper(item, source, id, variable){\r\n        var info = {\r\n            \"key\":id,\r\n            \"company_name\":source[\"name\"],\r\n            \"value\":source[variable],\r\n            \"fill\":stringToColor(source[\"name\"])\r\n        }\r\n        item.push(info)\r\n    }\r\n\r\n    function dataDistributer(itemm, vars){\r\n        var tempdata = process_data_numeric(seed_probs);\r\n        let id = 0\r\n        for(var i in tempdata){\r\n            formatHelper(itemm, tempdata[i], id, vars)\r\n            // formatHelper(itemm, tempdata[i], id, \"24_months\")\r\n            // formatHelper(itemm, tempdata[i], id, \"26_months\")\r\n            // formatHelper(itemm, tempdata[i], id, \"28_months\")\r\n            // formatHelper(itemm, tempdata[i], id, \"30_months\")\r\n            // formatHelper(itemm, tempdata[i], id, \"32_months\")\r\n            id++;\r\n        }\r\n        // formattedData.month_22.sort((a,b) => (a.value < b.value) ? 1 : ((b.value < a.value) ? -1 : 0))\r\n        // console.log(formattedData.month_22)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //         dataDistributer();\r\n    //   });\r\n\r\n    function getData(item, val, vars){\r\n        dataDistributer(item, vars)\r\n        item.sort((a,b) => (a.value < b.value) ? 1 : ((b.value < a.value) ? -1 : 0))\r\n        var i;\r\n        var ans = []\r\n        for (i = 0; i < val; i++) {\r\n            var te = item.shift()\r\n            // console.log(te)\r\n\r\n            ans.push(te)\r\n        }\r\n        // console.log(ans)\r\n        return ans\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor:\"white\", height:\"84vh\", padding:\"5px\"}}>\r\n\r\n            {/*first row*/}\r\n            <Row gutter={[8, 8]} className = \"rowAlpha\" style = {{height:\"40vh\"}}>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series A in next 22 months</Title>\r\n                        <VBarI\r\n                            dataS = {getData(formattedData.month_22, 10, \"22_months\")}\r\n                            dataKeyY = \"company_name\"\r\n                            dataKeyX = \"value\"\r\n                        />\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series A in next 24 months</Title>\r\n                        <VBarI\r\n                            dataS = {getData(formattedData.month_24, 10, \"24_months\")}\r\n                            dataKeyY = \"company_name\"\r\n                            dataKeyX = \"value\"\r\n                        />\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series A in next 26 months</Title>\r\n                        <VBarI\r\n                            dataS = {getData(formattedData.month_26, 10, \"26_months\")}\r\n                            dataKeyY = \"company_name\"\r\n                            dataKeyX = \"value\"\r\n                        />\r\n                </Col>\r\n            </Row>\r\n            <Divider/>\r\n            {/*second row*/}\r\n            <Row gutter={[8, 8]} className = \"rowBeta\" style = {{height:\"40vh\"}}>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series A in next 28 months</Title>\r\n                            <VBarI\r\n                                dataS = {getData(formattedData.month_28, 10, \"28_months\")}\r\n                                dataKeyY = \"company_name\"\r\n                                dataKeyX = \"value\"\r\n                            />\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series A in next 30 months</Title>\r\n                            <VBarI\r\n                                dataS = {getData(formattedData.month_30, 10, \"30_months\")}\r\n                                dataKeyY = \"company_name\"\r\n                                dataKeyX = \"value\"\r\n                            />\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series A in next 32 months</Title>\r\n                            <VBarI\r\n                                dataS = {getData(formattedData.month_32, 10, \"32_months\")}\r\n                                dataKeyY = \"company_name\"\r\n                                dataKeyX = \"value\"\r\n                            />\r\n                </Col>\r\n            </Row>\r\n      </div>\r\n        \r\n    )\r\n}\r\n","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Trend\\TrendingPager\\heatMap.jsx",["226","227","228","229"],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\pages\\Trend\\TrendingPager\\aTob.jsx",["230","231","232","233","234","235"],"// import React from 'react';\r\n// import './Landing.css';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { \r\n    Result, Button,Tabs,\r\n    Row, Col, Typography,Divider\r\n} from 'antd';\r\n\r\n\r\n// import graphical chart template\r\nimport VBarI from \"../../../components/chartTemplate/verticalBarI.jsx\"\r\n// import necessary dataset\r\nimport seedA_probs from \"../../../components/common/data/series_a_probs.json\"\r\n\r\n// import style\r\nconst {Text,Title} = Typography\r\nconst colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\r\n\r\nexport default function Mapview () {\r\n    // const [token, setToken] = useState();\r\n    const formattedData = {\r\n        month_18:[],\r\n        month_20:[],\r\n        month_22:[],\r\n        month_24:[],\r\n        month_26:[],\r\n        month_28:[],\r\n    }\r\n\r\n    /*function: truncate the number*/\r\n    function process_data_numeric(datas) {\r\n    for (var i in datas){\r\n        for(var j in datas[i]){\r\n        if (typeof(datas[i][j]) === typeof(12)){\r\n            if(datas[i][j] > 0 && datas[i][j] <1){\r\n            datas[i][j] = (Math.trunc(datas[i][j] *10000))/100\r\n            }\r\n        }\r\n        }\r\n    }\r\n    return datas\r\n\r\n    }\r\n\r\n    function stringToColor(str){\r\n      var hash = 0;\r\n      for(var i=0; i < str.length; i++) {\r\n        hash = str.charCodeAt(i) + ((hash << 4) - hash);\r\n      }\r\n      var color = Math.abs(hash).toString(16).substring(0, 6);\r\n    \r\n      return \"#\" + '000000'.substring(0, 6 - color.length) + color;\r\n    }\r\n\r\n    function formatHelper(item, source, id, variable){\r\n        var info = {\r\n            \"key\":id,\r\n            \"company_name\":source[\"name\"],\r\n            \"value\":source[variable],\r\n            \"fill\":stringToColor(source[\"name\"])\r\n        }\r\n        // console.log(info.fill)\r\n        item.push(info)\r\n    }\r\n\r\n    function dataDistributer(itemm, vars){\r\n        var tempdata = process_data_numeric(seedA_probs);\r\n        let id = 0\r\n        for(var i in tempdata){\r\n            formatHelper(itemm, tempdata[i], id, vars)\r\n            id++;\r\n        }\r\n    }\r\n\r\n    function getData(item, val, vars){\r\n        dataDistributer(item, vars)\r\n        item.sort((a,b) => (a.value < b.value) ? 1 : ((b.value < a.value) ? -1 : 0))\r\n        var i;\r\n        var ans = []\r\n        for (i = 0; i < val; i++) {\r\n            var te = item.shift()\r\n            ans.push(te)\r\n        }\r\n        return ans\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor:\"white\", height:\"84vh\", padding:\"5px\"}}>\r\n\r\n            {/*first row*/}\r\n            <Row gutter={[8, 8]} className = \"rowAlpha\" style = {{height:\"40vh\"}}>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series B in next 18 months</Title>\r\n                        <VBarI\r\n                            dataS = {getData(formattedData.month_18, 10, \"18_months\")}\r\n                            dataKeyY = \"company_name\"\r\n                            dataKeyX = \"value\"\r\n                        />\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series B in next 20 months</Title>\r\n                        <VBarI\r\n                            dataS = {getData(formattedData.month_20, 10, \"20_months\")}\r\n                            dataKeyY = \"company_name\"\r\n                            dataKeyX = \"value\"\r\n                        />\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series B in next 22 months</Title>\r\n                        <VBarI\r\n                            dataS = {getData(formattedData.month_22, 10, \"22_months\")}\r\n                            dataKeyY = \"company_name\"\r\n                            dataKeyX = \"value\"\r\n                        />\r\n                </Col>\r\n            </Row>\r\n            <Divider/>\r\n            {/*second row*/}\r\n            <Row gutter={[8, 8]} className = \"rowBeta\" style = {{height:\"40vh\"}}>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series B in next 24 months</Title>\r\n                            <VBarI\r\n                                dataS = {getData(formattedData.month_24, 10, \"24_months\")}\r\n                                dataKeyY = \"company_name\"\r\n                                dataKeyX = \"value\"\r\n                            />\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series B in next 6 months</Title>\r\n                            <VBarI\r\n                                dataS = {getData(formattedData.month_26, 10, \"26_months\")}\r\n                                dataKeyY = \"company_name\"\r\n                                dataKeyX = \"value\"\r\n                            />\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Title level = {5}>Top 10 firms with highest possibilies to enter Series B in next 28 months</Title>\r\n                            <VBarI\r\n                                dataS = {getData(formattedData.month_28, 10, \"28_months\")}\r\n                                dataKeyY = \"company_name\"\r\n                                dataKeyX = \"value\"\r\n                            />\r\n                </Col>\r\n            </Row>\r\n      </div>\r\n        \r\n    )\r\n}\r\n","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\verticalBarI.jsx",["236"],"import React, { PureComponent } from 'react';\r\nimport {\r\n  ComposedChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,Cell,\r\n} from 'recharts';\r\n\r\n/*template: responsive vertical bar chart */\r\nexport default class Example extends PureComponent {\r\n\r\n  render() {\r\n    return (\r\n    <ResponsiveContainer width=\"90%\" height={350}>\r\n      <ComposedChart\r\n        layout=\"vertical\"\r\n\r\n        data={this.props.dataS}\r\n        margin={{\r\n            top: 20, right: 20, left: 30, bottom: 15,\r\n          }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis type=\"number\" unit = \"%\" />\r\n        <YAxis dataKey={this.props.dataKeyY} type=\"category\" fontSize=\"small\"/>\r\n        <Tooltip />\r\n        <Bar dataKey={this.props.dataKeyX} barSize={10} fill=\"#413ea0\" margin=\"20px\">\r\n          {\r\n              (this.props.dataS).map((entry, index) => ( console.log(entry),\r\n                <Cell key={`cell-${entry.company_name}`} fill={entry[\"fill\"]} />)\r\n                )\r\n          }\r\n        </Bar>\r\n      </ComposedChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\Context\\UserContext.js",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\history\\history.js",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\BalanceGraph.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\ProfitGraph.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\chartTemplate\\PieChartI.jsx",["237"],"import React, { PureComponent } from 'react';\r\nimport {\r\n  PieChart, Pie, Sector, Cell,\r\n} from 'recharts';\r\n\r\nimport basedata from \"../common/data/final_company_info.json\"\r\n\r\n/*variable: store the processed data (status distribution) */\r\nvar data = [];\r\n\r\n/*variable: list of color scheme */\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042',\"#16a3ff\", \"#6ddead\", \"#5edfff\", \"#3e64ff\", \"#505bda\"];\r\n\r\n/*constant: radian value */\r\nconst RADIAN = Math.PI / 180;\r\n\r\n/*constant: customized label location rendering */\r\nconst renderCustomizedLabel = ({\r\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n}) => {\r\n   const radius = innerRadius + 80;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"black\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\" fontSize=\"15px\" >\r\n      {`${data[index].name}`}\r\n\r\n    </text>\r\n  );\r\n};\r\n\r\n/*template: Pie chart with fixed size*/\r\nexport default class Example extends PureComponent {\r\n\r\n  render() {\r\n    basedata.map(item =>  data[item.status] = (data[item.status] || 0) + 1, );\r\n    var result = []\r\n    for (const key in data)\r\n    {\r\n        result.push({name:key, value:data[key]});\r\n    }\r\n    data = result;\r\n    return (\r\n      <PieChart width={350} height={180}>\r\n        <Pie\r\n          data={data}\r\n          dataKey =\"value\"\r\n          cx={150}\r\n          cy={90}\r\n          labelLine={true}\r\n          label={renderCustomizedLabel}\r\n          outerRadius={60}\r\n          fill=\"black\"\r\n        >\r\n          {\r\n            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n          }\r\n        </Pie>\r\n      </PieChart>\r\n    );\r\n  }\r\n}\r\n","A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\data\\newstemp.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\MapV2\\extraMAP.jsx",[],"A:\\coding_proj\\TEMG4952A\\actual\\temg4952a-team-3\\front\\ui\\src\\components\\common\\MapV2\\processed_.jsx",["238"],"/*load all the company infomration */\r\nimport basedata from \"../data/final_company_info.json\"\r\n/*load all the information of firms able to enter series A */\r\nimport seed_to_a from \"../data/seed_probs.json\";\r\n/*load all the information of firms able to enter series B */\r\nimport a_to_b from \"../data/series_a_probs.json\";\r\n/*load the mock-up monthly success rate */\r\nimport monthRateDefault from \"../data/peridoRate.json\";\r\n\r\n/* variable: to hold the success rate information in each timeframe for the inspected company */\r\nvar stateXXX = [];\r\n\r\n/*function: process the dataset to parse all the numeric data from string to number */\r\nfunction process_data_numeric_comparison(datas) {\r\n    for (var i in datas){\r\n      for(var j in datas[i]){\r\n        if (typeof(datas[i][j]) === typeof(12)){\r\n          if(datas[i][j] > 0 && datas[i][j] <1){\r\n            datas[i][j] = (Math.trunc(datas[i][j] *10000))/100\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return datas\r\n\r\n  }\r\n\r\n/*function: process data to return percentage data*/ \r\nfunction process_data_comparison (datas) {\r\nfor (var i in datas){\r\n  if(typeof(datas[i].success_rate) !== typeof(12)){\r\n    datas[i].success_rate = (Math.trunc(parseFloat(datas[i].success_rate)*10000))/100;\r\n  }\r\n}\r\nreturn datas\r\n}\r\n\r\n/*constant: hold the processed geoJSON format data */\r\nconst finalans = []\r\n\r\n/*function: return set of datapoint of set of companies and respective average success rate in geoJSON format*/\r\nexport default function pdata () {\r\n    // const [token, setToken] = useState();\r\n    /*dataset pre-processing for value formatting */\r\n    var seed = process_data_numeric_comparison(seed_to_a)\r\n    var ab = process_data_numeric_comparison(a_to_b)\r\n    var defaults = process_data_comparison(monthRateDefault)\r\n\r\n    for (var i in basedata){\r\n        var item = basedata[i]\r\n        var tempdata;\r\n        var flag = 1;\r\n        if (item.funding_status === \"seed\"){\r\n            tempdata = seed;\r\n          }else if (item.funding_status === \"series_a\"){\r\n            tempdata =  ab;\r\n          }else{\r\n            flag = 0;\r\n            tempdata = defaults;\r\n          }\r\n          var ans = [];\r\n          if (flag === 1){\r\n                for (var j in tempdata){\r\n                  if (tempdata[j].name === item.name){\r\n                      const entries = Object.entries(tempdata[j])\r\n                      let id = 0;\r\n                      ans = entries.map(function(itemX){\r\n                      if(itemX[0] !== \"name\" && itemX[0] !== \"key\") {\r\n                          var info = {\r\n                          key: id,\r\n                          period: itemX[0],\r\n                          success_rate: itemX[1],\r\n                          }\r\n                          id++;\r\n                          return info;\r\n                      }\r\n                      })\r\n                      break;\r\n                  }\r\n                }\r\n                ans.shift()\r\n                ans.shift()\r\n                stateXXX = []\r\n                stateXXX.push(ans.pop())\r\n                stateXXX.push(ans.pop())\r\n                stateXXX.push(ans.pop())\r\n                stateXXX.push(ans.pop())\r\n                stateXXX.push(ans.pop())\r\n            }\r\n            var sum = stateXXX[0].success_rate + stateXXX[1].success_rate + stateXXX[2].success_rate+stateXXX[3].success_rate +stateXXX[4].success_rate;\r\n            sum = sum/5;\r\n            var k2 = sum/100;\r\n\r\n            var info = { \r\n                type: 'Feature', \r\n                geometry: {type: 'Point', 'coordinates': [ parseFloat(basedata[i].longitude),parseFloat(basedata[i].latitude) ] }, \r\n                properties: { weight: k2 }}\r\n            // console.log(info)\r\n            finalans.push(info)\r\n      }\r\n\r\n\r\n    return finalans\r\n}\r\n",{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":15,"column":21,"nodeType":"245","messageId":"246","endLine":15,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":49,"column":3,"nodeType":"245","endLine":49,"endColumn":12,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":362,"column":15,"nodeType":"245","messageId":"252","endLine":362,"endColumn":18},{"ruleId":"250","severity":1,"message":"253","line":528,"column":19,"nodeType":"245","messageId":"252","endLine":528,"endColumn":22},{"ruleId":"254","severity":1,"message":"255","line":613,"column":31,"nodeType":"256","messageId":"257","endLine":613,"endColumn":39},{"ruleId":"258","severity":1,"message":"259","line":702,"column":79,"nodeType":"260","endLine":702,"endColumn":109},{"ruleId":"258","severity":1,"message":"259","line":703,"column":82,"nodeType":"260","endLine":703,"endColumn":106},{"ruleId":"243","severity":1,"message":"261","line":13,"column":8,"nodeType":"245","messageId":"246","endLine":13,"endColumn":20},{"ruleId":"262","severity":1,"message":"263","line":39,"column":27,"nodeType":"260","endLine":39,"endColumn":30},{"ruleId":"262","severity":1,"message":"263","line":39,"column":69,"nodeType":"260","endLine":39,"endColumn":72},{"ruleId":"262","severity":1,"message":"263","line":40,"column":27,"nodeType":"260","endLine":40,"endColumn":30},{"ruleId":"262","severity":1,"message":"263","line":40,"column":48,"nodeType":"260","endLine":40,"endColumn":51},{"ruleId":"262","severity":1,"message":"263","line":40,"column":67,"nodeType":"260","endLine":40,"endColumn":70},{"ruleId":"262","severity":1,"message":"263","line":41,"column":27,"nodeType":"260","endLine":41,"endColumn":30},{"ruleId":"262","severity":1,"message":"263","line":48,"column":59,"nodeType":"260","endLine":48,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":49,"column":76,"nodeType":"260","endLine":49,"endColumn":79},{"ruleId":"262","severity":1,"message":"263","line":50,"column":77,"nodeType":"260","endLine":50,"endColumn":80},{"ruleId":"243","severity":1,"message":"264","line":7,"column":7,"nodeType":"245","messageId":"246","endLine":7,"endColumn":20},{"ruleId":"243","severity":1,"message":"265","line":14,"column":9,"nodeType":"245","messageId":"246","endLine":14,"endColumn":19},{"ruleId":"243","severity":1,"message":"266","line":14,"column":30,"nodeType":"245","messageId":"246","endLine":14,"endColumn":36},{"ruleId":"258","severity":1,"message":"259","line":86,"column":41,"nodeType":"260","endLine":86,"endColumn":75},{"ruleId":"262","severity":1,"message":"267","line":86,"column":41,"nodeType":"260","endLine":86,"endColumn":75},{"ruleId":"262","severity":1,"message":"263","line":29,"column":21,"nodeType":"260","endLine":29,"endColumn":24},{"ruleId":"243","severity":1,"message":"268","line":71,"column":39,"nodeType":"245","messageId":"246","endLine":71,"endColumn":46},{"ruleId":"243","severity":1,"message":"269","line":1,"column":38,"nodeType":"245","messageId":"246","endLine":1,"endColumn":42},{"ruleId":"243","severity":1,"message":"270","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":13},{"ruleId":"243","severity":1,"message":"268","line":81,"column":39,"nodeType":"245","messageId":"246","endLine":81,"endColumn":46},{"ruleId":"243","severity":1,"message":"271","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":14},{"ruleId":"243","severity":1,"message":"272","line":4,"column":17,"nodeType":"245","messageId":"246","endLine":4,"endColumn":25},{"ruleId":"243","severity":1,"message":"273","line":5,"column":18,"nodeType":"245","messageId":"246","endLine":5,"endColumn":24},{"ruleId":"243","severity":1,"message":"274","line":5,"column":25,"nodeType":"245","messageId":"246","endLine":5,"endColumn":29},{"ruleId":"243","severity":1,"message":"271","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":14},{"ruleId":"243","severity":1,"message":"272","line":4,"column":17,"nodeType":"245","messageId":"246","endLine":4,"endColumn":25},{"ruleId":"243","severity":1,"message":"275","line":4,"column":26,"nodeType":"245","messageId":"246","endLine":4,"endColumn":35},{"ruleId":"243","severity":1,"message":"276","line":6,"column":5,"nodeType":"245","messageId":"246","endLine":6,"endColumn":11},{"ruleId":"243","severity":1,"message":"273","line":6,"column":13,"nodeType":"245","messageId":"246","endLine":6,"endColumn":19},{"ruleId":"243","severity":1,"message":"274","line":6,"column":20,"nodeType":"245","messageId":"246","endLine":6,"endColumn":24},{"ruleId":"243","severity":1,"message":"277","line":17,"column":8,"nodeType":"245","messageId":"246","endLine":17,"endColumn":12},{"ruleId":"243","severity":1,"message":"271","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":14},{"ruleId":"243","severity":1,"message":"272","line":4,"column":17,"nodeType":"245","messageId":"246","endLine":4,"endColumn":25},{"ruleId":"243","severity":1,"message":"273","line":5,"column":18,"nodeType":"245","messageId":"246","endLine":5,"endColumn":24},{"ruleId":"243","severity":1,"message":"274","line":5,"column":25,"nodeType":"245","messageId":"246","endLine":5,"endColumn":29},{"ruleId":"243","severity":1,"message":"271","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":14},{"ruleId":"243","severity":1,"message":"276","line":6,"column":5,"nodeType":"245","messageId":"246","endLine":6,"endColumn":11},{"ruleId":"243","severity":1,"message":"273","line":6,"column":13,"nodeType":"245","messageId":"246","endLine":6,"endColumn":19},{"ruleId":"243","severity":1,"message":"274","line":6,"column":20,"nodeType":"245","messageId":"246","endLine":6,"endColumn":24},{"ruleId":"243","severity":1,"message":"277","line":17,"column":8,"nodeType":"245","messageId":"246","endLine":17,"endColumn":12},{"ruleId":"243","severity":1,"message":"278","line":18,"column":7,"nodeType":"245","messageId":"246","endLine":18,"endColumn":13},{"ruleId":"279","severity":1,"message":"280","line":26,"column":76,"nodeType":"281","messageId":"282","endLine":26,"endColumn":77},{"ruleId":"243","severity":1,"message":"283","line":3,"column":18,"nodeType":"245","messageId":"246","endLine":3,"endColumn":24},{"ruleId":"254","severity":1,"message":"255","line":67,"column":41,"nodeType":"256","messageId":"257","endLine":67,"endColumn":49},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"no-unused-vars","'useAuth' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setComparisonItem'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selectedITEM.itemSelected, selectedITEM.itemName] as a second argument to the useEffect Hook.",["286"],"no-redeclare","'sum' is already defined.","redeclared","'tag' is already defined.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'employeeRate' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'cardContainer' is assigned a value but never used.","'logintoken' is defined but never used.","'logout' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'POP_EST' is assigned a value but never used.","'memo' is defined but never used.","'csv' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Tabs' is defined but never used.","'useEffect' is defined but never used.","'Result' is defined but never used.","'Text' is assigned a value but never used.","'colors' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Sector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},"Add dependencies array: [selectedITEM.itemSelected, selectedITEM.itemName]",{"range":"289","text":"290"},[1972,1972],", [selectedITEM.itemSelected, selectedITEM.itemName]"]